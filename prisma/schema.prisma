generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model carteiras {
  id          Int         @id @default(autoincrement())
  saldo       Decimal     @db.Decimal(15, 2)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  last_update DateTime    @default(now()) @db.Timestamp(6)
  jogadores   jogadores[]
}

model cidades {
  id          Int         @id @default(autoincrement())
  nomeCidade  String      @db.VarChar(255)
  fk_estado   Int
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  last_update DateTime    @default(now()) @db.Timestamp(6)
  estados     estados     @relation(fields: [fk_estado], references: [id], map: "fk_cidades_estados")
  enderecos   enderecos[]
}

model enderecos {
  id              Int         @id @default(autoincrement())
  numero          String      @db.VarChar(255)
  bairro          String      @db.VarChar(255)
  cep             String      @db.VarChar(8)
  complemento     String      @db.VarChar(255)
  fk_cidade       Int
  created_at      DateTime    @default(now()) @db.Timestamp(6)
  last_update     DateTime    @default(now()) @db.Timestamp(6)
  logradouro      String      @db.VarChar(255)
  tipo_logradouro String      @db.VarChar(255)
  cidades         cidades     @relation(fields: [fk_cidade], references: [id], map: "fk_enderecos_cidades")
  jogadores       jogadores[]
}

model estados {
  id          Int       @id @default(autoincrement())
  descricao   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  last_update DateTime  @default(now()) @db.Timestamp(6)
  uf          String    @db.VarChar(2)
  cidades     cidades[]
}

model jogadores {
  id              Int       @id @default(autoincrement())
  nome            String    @db.VarChar(255)
  apelido         String    @unique(map: "u_jogadores_apelido") @db.VarChar(255)
  email           String    @unique(map: "u_jogadores_email") @db.VarChar(255)
  senha           String    @db.VarChar(255)
  cpf             String    @unique(map: "u_jogadores_cpf") @db.VarChar(11)
  fk_carteira     Int
  fk_endereco     Int
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  last_update     DateTime  @default(now()) @db.Timestamp(6)
  data_nascimento String?   @db.VarChar(255)
  is_active       Boolean?
  fk_telefone     Int
  carteiras       carteiras @relation(fields: [fk_carteira], references: [id], onDelete: Cascade, map: "fk_jogadores_carteiras")
  enderecos       enderecos @relation(fields: [fk_endereco], references: [id], onDelete: Cascade, map: "fk_jogadores_enderecos")
  telefones       telefones @relation(fields: [fk_telefone], references: [id], onDelete: Cascade, map: "fk_jogadores_telefones")
}

model telefones {
  id          Int         @id @default(autoincrement())
  ddd         String      @db.VarChar(2)
  numero      String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  last_update DateTime    @default(now()) @db.Timestamp(6)
  jogadores   jogadores[]
}
